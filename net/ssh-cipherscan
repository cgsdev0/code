#!/usr/bin/env python3
from nullroute.io import SshBinaryReader
from pprint import pprint
import io
import socket
import sys

def dump_one(buf, name):
    print("\033[1m%s:\033[m" % name)
    words = buf.decode().split(",")
    pprint(words)

def dump_hdr(buf):
    br = SshBinaryReader(io.BytesIO(buf))
    proposal = br.read_string()
    br = SshBinaryReader(io.BytesIO(proposal))
    header = {
        None: br.read(18),
        "kexes": br.read_array(),
        "hostkeys": br.read_array(),
        "ciphers": br.read_array(),
        None: br.read_array(),
        "macs": br.read_array(),
        None: br.read_array(),
        "compression": br.read_array(),
        None: br.read_array(),
    }
    del header[None]
    pprint(header)

host = sys.argv[1]
port = 22

gais = socket.getaddrinfo(host, port, type=socket.SOCK_STREAM)

for (g_family, g_type, g_proto, g_cname, g_addr) in gais:
    sock = socket.socket(g_family, g_type, g_proto)
    sock.connect(g_addr)
    sock.recv(1024)
    sock.send(b"SSH-2.0-Cipherscan\r\n")
    buf = sock.recv(1024)
    sock.close()
    dump_hdr(buf)
    break
